USETYPES le_limit.api;

FUNCTION ExecuteCommand
(
	string 	userCommand[le_limit.MAX_PATH_LEN] IN,       ///< dataPath
	int32	retCode OUT,
	string  response[256] OUT
);

//--------------------------------------------------------------------------------------------------
/**
 * View config
 */
//--------------------------------------------------------------------------------------------------
FUNCTION ViewConfig
(

);

//--------------------------------------------------------------------------------------------------
/**
 * Configure the session
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Config
(
    string 		szBrokerUrl[256] IN,
    int32 		n32PortNumber IN,
    int32 		n32KeepAlive IN,
    int32 		n32QoS IN,
    string		szUser[32] IN,
	string		szPassword[32] IN
);

//--------------------------------------------------------------------------------------------------
/**
 * Open a MQTT session
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Connect
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Close MQTT session
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Disconnect
(

);

//--------------------------------------------------------------------------------------------------
/**
 * Send data (key, value) to MQTT broker
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Send
(
    string 		szKey[128]     IN,
    string 		szValue[128]   IN,
    int32       errCode        OUT
);

//--------------------------------------------------------------------------------------------------
/**
 * Handler for session state changes
 */
//--------------------------------------------------------------------------------------------------
HANDLER SessionStateHandler
(
    bool 	bIsConnected IN,       ///< Session State: connected or disconnected
    int32	nConnectErrorCode IN,  ///< connection returned code
    int32	nSebErrorCode 			///< subscribe returned code
);

//--------------------------------------------------------------------------------------------------
/**
 * This event provides information on session state changes
 */
//--------------------------------------------------------------------------------------------------
EVENT SessionState
(
    handler SessionStateHandler
);

//--------------------------------------------------------------------------------------------------
/**
 * Handler for Incoming message
 */
//--------------------------------------------------------------------------------------------------
HANDLER IncomingMessageHandler
(
    string sTopicName[128] IN,  ///< Name of the subscribed topic
    string sKey[128] IN,  ///< Key Name of the data
    string sValue[128] IN,  ///< Value of the data
    string sTimestamp[16] IN  ///< Timestamp of the data
);

//--------------------------------------------------------------------------------------------------
/**
 * This event provides information on the incoming MQTT message
 */
//--------------------------------------------------------------------------------------------------
EVENT IncomingMessage
(
    handler IncomingMessageHandler
);
